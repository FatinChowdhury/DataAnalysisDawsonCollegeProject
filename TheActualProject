import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

# setting up the dataset
df = pd.read_csv('admission_data.csv')

# printing first rows of dataset
print(df.head())

# Confirmation
print("Column names:", df.columns)

# Checking for missing values
print(df.isnull().sum())

# Replace 'Chance of Admit ' with the correct column name
X = df.drop('Chance of Admit ', axis=1)
y = df['Chance of Admit ']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


lm = LinearRegression()
lm.fit(X_train, y_train)

# to make predictions
y_pred = lm.predict(X_test)

# testing
print('R^2:',metrics.r2_score(y_test, y_pred))
print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred)) 
print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))
print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))

# Creating a bar chart of the mean chance of admission per university rating
mean_chance_per_uni_rating = df.groupby('University Rating')['Chance of Admit '].mean()

plt.figure(figsize=(10, 6))
plt.bar(mean_chance_per_uni_rating.index, mean_chance_per_uni_rating.values, color='blue', alpha=0.7)
plt.title('Mean Chance of Admission per University Rating')
plt.xlabel('University Rating')
plt.ylabel('Mean Chance of Admission')
plt.show()

# Creating line plots of each feature against the chance of admission with the line of best fit
features = X.columns
for feature in features:
    plt.figure(figsize=(10, 6))
    plt.plot(df[feature], df['Chance of Admit '], linestyle='', marker='o', markersize=2, label='Data')

    # Calculate line of best fit
    m, b = np.polyfit(df[feature], df['Chance of Admit '], 1)

    # Add line of best fit to plot
    plt.plot(df[feature], m*df[feature] + b, color='red', label='Line of Best Fit')

    plt.title(f'Chance of Admission vs. {feature}')
    plt.xlabel(feature)
    plt.ylabel('Chance of Admission')
    plt.legend()
    plt.show()
